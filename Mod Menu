bl_info = {
    "name": "Mode Menu",
    "author": "Cédric Lepiller",
    "version": (0, 1, 0),
    "blender": (2, 7, 5),
    "description": "custom Menu pour afficher les différents modes",
    "category": "3D View"}

import bpy

class customMenu(bpy.types.Menu):
    bl_label = ""
    bl_idname = "Mod.customMenu"
 
    
    def draw(self, context):
        layout = self.layout
        settings = context.tool_settings
        layout.operator_context = 'INVOKE_REGION_WIN'

        ob = context
        if ob.mode == 'OBJECT':
            # Object mode
        
            layout.operator("object.editmode_toggle", text="Enter Edit Mode",icon='EDITMODE_HLT')
            layout.operator("sculpt.sculptmode_toggle", text="Sculpt Mode",icon='SCULPTMODE_HLT')
            layout.operator("paint.vertex_paint_toggle", text="Vertex Paint",icon='VPAINT_HLT')
            layout.operator("paint.weight_paint_toggle", text="Weight Paint",icon='WPAINT_HLT')
            layout.operator("paint.texture_paint_toggle", text="Texture Paint",icon='TPAINT_HLT')
            
        
        if ob.mode == 'EDIT_MESH':
            # Edit mode 
            
            layout.operator("object.editmode_toggle", text="Enter Object Mode", icon='OBJECT_DATAMODE')
            layout.operator("sculpt.sculptmode_toggle", text="Sculpt Mode",icon='SCULPTMODE_HLT')
            layout.operator("paint.vertex_paint_toggle", text="Vertex Paint",icon='VPAINT_HLT')
            layout.operator("paint.weight_paint_toggle", text="Weight Paint",icon='WPAINT_HLT')
            layout.operator("paint.texture_paint_toggle", text="Texture Paint",icon='TPAINT_HLT')
            
        ob = context
        if ob.mode == 'PAINT_WEIGHT':
            # Weight paint menu
            
            layout.operator("paint.weight_paint_toggle", text="Object Mode",icon='OBJECT_DATAMODE')
            layout.operator("object.editmode_toggle", text="Enter Edit Mode",icon='EDITMODE_HLT')
            layout.operator("sculpt.sculptmode_toggle", text="Sculpt Mode",icon='SCULPTMODE_HLT')
            layout.operator("paint.vertex_paint_toggle", text="Vertex Paint",icon='VPAINT_HLT')
            layout.operator("paint.texture_paint_toggle", text="Texture Paint",icon='TPAINT_HLT')
        
        elif ob.mode == 'PAINT_VERTEX':
            # Vertex paint menu
            
            layout.operator("paint.vertex_paint_toggle", text="Object Mode",icon='OBJECT_DATAMODE')
            layout.operator("object.editmode_toggle", text="Enter Edit Mode",icon='EDITMODE_HLT')
            layout.operator("sculpt.sculptmode_toggle", text="Sculpt Mode",icon='SCULPTMODE_HLT')
            layout.operator("paint.weight_paint_toggle", text="Weight Paint",icon='WPAINT_HLT')
            layout.operator("paint.texture_paint_toggle", text="Texture Paint",icon='TPAINT_HLT')
        
        if ob.mode == 'PAINT_TEXTURE':
            # Texture paint menu
            
            layout.operator("paint.texture_paint_toggle", text="Object Mode",icon='OBJECT_DATAMODE')
            layout.operator("object.editmode_toggle", text="Enter Edit Mode",icon='EDITMODE_HLT')
            layout.operator("sculpt.sculptmode_toggle", text="Sculpt Mode",icon='SCULPTMODE_HLT')
            layout.operator("paint.vertex_paint_toggle", text="Vertex Paint",icon='VPAINT_HLT')
            layout.operator("paint.weight_paint_toggle", text="Weight Paint",icon='WPAINT_HLT')
            
        
        if ob.mode == 'SCULPT':
            # Sculpt menu   
            
            layout.operator("sculpt.sculptmode_toggle", text="Object Mode",icon='OBJECT_DATAMODE')
            layout.operator("object.editmode_toggle", text="Enter Edit Mode",icon='EDITMODE_HLT')
            layout.operator("paint.vertex_paint_toggle", text="Vertex Paint",icon='VPAINT_HLT')
            layout.operator("paint.weight_paint_toggle", text="Weight Paint",icon='WPAINT_HLT')
            layout.operator("paint.texture_paint_toggle", text="Texture Paint",icon='TPAINT_HLT')

            
def register():
    bpy.utils.register_class(customMenu)
    #bpy.ops.wm.call_menu(name=customMenu.bl_idname)


def unregister():
    bpy.utils.unregister_class(customMenu)  


if __name__ == "__main__":     register()
